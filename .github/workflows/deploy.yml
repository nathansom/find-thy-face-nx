name: Deploy
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
on:
  push:
    branches:
      - main

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
            node-version: 20
      - name: Restore cached npm dependencies
        uses: actions/cache/restore@v3
        with:
          path: |
            node_modules
          key: npm-dependencies-${{ hashFiles('package-lock.json') }}
      - name: Install node modules
        run: npm ci
      - name: Cache npm dependencies
        uses: actions/cache/save@v3
        with:
          path: |
            node_modules
          key: npm-dependencies-${{ hashFiles('package-lock.json') }}
      - name: Build client app
        run: npx nx run find-thy-face-client:build:development
      - name: Build server app
        run: npx nx run find-thy-face-api:build:production
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        working-directory: dist/apps/find-thy-face-client
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        working-directory: dist/apps/find-thy-face-client
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        working-directory: dist/apps/find-thy-face-client
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Deploy server app to Fly.io
        working-directory: apps/find-thy-face-api
        run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}


